#自省
hasattr(obj,'属性') #obj.属性  是否存在
getattr(obj,'属性') #获取obj.属性   不存在则报错
getattr(obj,'属性'，'默认值') #获取obj.属性   不存在不会报错，返回那个默认值
setattr(obj，'属性'，'属性的值') #obj.属性=属性的值
delattr(obj，'属性') #del obj.属性

#__getattr__,__setattr__,__delattr__
obj点的方式去操作属性时触发的方法

__getattr__:obj.属性 不存在时触发
__setattr__:obj.属性=属性的值 时触发
__delattr__:del obj.属性 时触发

#__getitem__,__setitem_,__delitem__
obj[‘属性’]的方式去操作属性时触发的方法

__getitem__:obj['属性'] 时触发
__setitem__:obj['属性']=属性的值 时触发
__delitem__:del obj['属性'] 时触发

#__get__,__set__,__delete__
描述就是一个新式类，这个类至少要实现上述三个方法的一个
class 描述符：
	def __get__（）：
		pass
	def __set__（）：
		pass
	def __delete__（）：
		pass

class 类：
	name=描述符（）

obj=类（）
obj.name #get
obj.name='egon' #set
del obj.name #delete

#__del__:析构方法
垃圾回收时触发

